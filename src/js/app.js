$(function () {  /* ===== menu burger on mobile ================ */  let navToggle = $('#navToggle')  let nav = $('#nav')  navToggle.on('click', function(e) {    e.preventDefault();    $(this).toggleClass('active')    nav.toggleClass('show')  })  $(window).on("resize", function() {    $("body").removeClass('show-nav');    navToggle.removeClass('active');    nav.removeClass('show');  });  let intro = $('#intro');  let header = $('#header');  let headerH = header.innerHeight(); // headerH равен высоте header  let introH = intro.innerHeight();  let scrollTop = $(window).scrollTop(); // в переменную сохраняем позицию скролла страницы  headerScroll();  $(window).on('scroll resize', function() {    headerScroll();  })  function headerScroll(){    introH = intro.innerHeight();    headerH = header.innerHeight();    // this обращается в window.    let scrollTop = $(this).scrollTop();    if(scrollTop >= (introH - headerH)){      header.addClass('header--dark')    } else {      header.removeClass('header--dark')    }  }  // /* Smooth Scroll to sections  //    =====================================*/  //  // $("[data-scroll]").on("click", function(event) {  //   event.preventDefault();  //  //   let scrollEl = $(this).data("scroll");  //   let scrollElPos = $(scrollEl).offset().top;  //  //   navToggle.removeClass('active');  //   nav.removeClass('show');  //  //   $("html, body").animate({  //     scrollTop: scrollElPos - headerH  //   }, 500)  // });  /* ScrollSpy   ================== */  let windowH = $(window).height(); // сохраняем высоту окна  scrollSpy(scrollTop);  $(window).on("scroll", function() { // отслеживаем scroll страницы    scrollTop = $(this).scrollTop(); // в переменную сохраняем позицию скролла страницы    scrollSpy(scrollTop);  })  function scrollSpy(scrollTop) {    $("[data-scrollspy]").each(function() {      let $this = $(this);      let sectionId = $this.data('scrollspy');      let sectionOffset = $this.offset().top;      sectionOffset = sectionOffset - (windowH * 0.5); // делим высоту окна на 2 и отнимаем у sectionOffset      if(scrollTop >= sectionOffset){        $('#nav [data-scroll]').removeClass('active')        $('#nav [data-scroll="' + sectionId + '"]').addClass('active')      }      if(scrollTop == 0){        $('#nav [data-scroll]').removeClass('active')      }    })  }  /* ===== modal window  ================ */  // при клике на элемент, у которого есть атрибут data-modal  $('[data-modal]').on('click', function(event){    event.preventDefault();    let modal = $(this).data('modal'); // сохраняем в переменную id модального окна    console.log(modal)    // добавлем селектор тега body    $('body').addClass('no-scroll')    // id modal Добавляем класс show    $(modal).addClass('show');    setTimeout(function() {      $(modal).find('.modal__inner').css({        transform: 'translateY(0)',        opacity: '1'      })    })  })  // если нажимаем на элемент, где есть такой атрибут  $('[data-modal-close]').on('click', function(event){    event.preventDefault();    // ищем родителя с классом modal и сохраняем её в переменную    let modal = $(this).parents('.modal');    modalClose(modal);  })  // если нажимаем на модальное окно  $('.modal').on('click', function() {    let modal = $(this);    modalClose(modal);  })  $('.modal__inner').on('click', function(event) {    event.stopPropagation() // отменяем клик по этому элементу  })  function modalClose(modal){    modal.find('.modal__inner').css({      transform: 'translateY(-100px)',      opacity: '0'    })    setTimeout(function() {      $('body').removeClass('no-scroll')      modal.removeClass('show');    }, 200)  }  /* ===== slick slider ================ */  let introSlider = $("#introSlider")  introSlider.slick({    infinite: true,    slidesToShow: 1,    slidesToScroll: 1,    arrows: false,    fade: true  })  $('#introSliderPrev').on('click', function(){    introSlider.slick('slickPrev')  })  $('#introSliderNext').on('click', function(){    introSlider.slick('slickNext')  })  /* reviews slider */  let reviewsSlider = $("#reviewsSlider")  reviewsSlider.slick({    infinite: true,    slidesToShow: 1,    slidesToScroll: 1,    arrows: false,    dots: true,    speed: 500,    // fade: true  })  /* =============== aos js */  AOS.init({    // Global settings:    disable: 'mobile', // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function    startEvent: 'DOMContentLoaded', // name of the event dispatched on the document, that AOS should initialize on    initClassName: 'aos-init', // class applied after initialization    animatedClassName: 'aos-animate', // class applied on animation    useClassNames: false, // if true, will add content of `data-aos` as classes on scroll    disableMutationObserver: false, // disables automatic mutations' detections (advanced)    debounceDelay: 50, // the delay on debounce used while resizing window (advanced)    throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)    // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:    offset: 120, // offset (in px) from the original trigger point    delay: 0, // values from 0 to 3000, with step 50ms    duration: 700, // values from 0 to 3000, with step 50ms    easing: 'ease', // default easing for AOS animations    once: true, // whether animation should happen only once - while scrolling down    mirror: false, // whether elements should animate out while scrolling past them    anchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation  });})